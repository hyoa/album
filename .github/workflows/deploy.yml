name: Deploy master branch

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
  
    - name: Setup PHP 8.0
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Writing PRIVATE_PEM
      run: 'echo "$PRIVATE_PEM" > ./backend/config/jwt/private.pem'
      shell: bash
      env:
        PRIVATE_PEM: ${{secrets.private_pem}}

    - name: Writing PUBLIC_PEM
      run: 'echo "$PUBLIC_PEM" > ./backend/config/jwt/public.pem'
      shell: bash
      env:
        PUBLIC_PEM: ${{secrets.public_pem}}
    
    - name: Build project
      run: 'sh ./build.sh'
      working-directory: ./backend
    
    - name: Clean project
      run: 'sh ./clean_dependencies.sh $PWD/lambda_build'
      working-directory: ./backend
    
    - name: Install serverless
      run: npm install serverless@2.72.3
      working-directory: ./backend/lambda_build

    - name: Create config file
      run: php createConfig.php
      working-directory: ./.github/workflows/utils
      env:
        ALBUM_STORAGE_REGION: ${{secrets.album_storage_region}}
        ADMIN_EMAIL: ${{secrets.admin_email}}
        APP_EMAIL: ${{secrets.app_email}}
        IMG_PROXY: ${{secrets.img_proxy}}
        APP_URI: ${{secrets.app_uri}}
        FIREBASE_CHANNEL_SUFFIX: ${{secrets.firebase_channel_suffix}}
        CORS_ALLOW_ORIGIN: ${{secrets.cors_allow_origin}}
        APP_NAME: ${{secrets.app_name}}
        JWT_SECRET: ${{secrets.jwt_secret}}
    
    - name: Run deployment
      run: npx serverless deploy --stage prod
      working-directory: ./backend/lambda_build
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
